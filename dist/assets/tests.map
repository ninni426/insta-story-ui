{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","insta-story-ui/tests/integration/components/story-slide-test.js","insta-story-ui/tests/lint/app.lint-test.js","insta-story-ui/tests/lint/templates.template.lint-test.js","insta-story-ui/tests/lint/tests.lint-test.js","insta-story-ui/tests/test-helper.js","insta-story-ui/tests/unit/routes/not-found-test.js","insta-story-ui/tests/unit/routes/stories-test.js","vendor/ember-cli/app-config.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define(\"insta-story-ui/tests/integration/components/story-slide-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | story-slide', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.set('myAction', function(val) { ... });\n      await (0, _testHelpers.render)(Ember.HTMLBars.template({\n        \"id\": \"pQ/+fl69\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[21,\\\"story-slide\\\"],false]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n      assert.equal(this.element.textContent.trim(), ''); // Template block usage:\n\n      await (0, _testHelpers.render)(Ember.HTMLBars.template({\n        \"id\": \"71Z1OCt7\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"story-slide\\\",null,null,{\\\"statements\\\":[[0,\\\"        template block text\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n      assert.equal(this.element.textContent.trim(), 'template block text');\n    });\n  });\n});","define(\"insta-story-ui/tests/lint/app.lint-test\", [], function () {\n  \"use strict\";\n\n  QUnit.module('ESLint | app');\n  QUnit.test('app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('components/story-slide.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/story-slide.js should pass ESLint\\n\\n4:8 - Use import $ from \\'jquery\\'; instead of using Ember destructuring (ember/new-module-imports)\\n4:11 - Use import { computed } from \\'@ember/object\\'; instead of using Ember destructuring (ember/new-module-imports)');\n  });\n  QUnit.test('resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('router.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/not-found.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/not-found.js should pass ESLint\\n\\n2:8 - Use import $ from \\'jquery\\'; instead of using Ember destructuring (ember/new-module-imports)\\n2:13 - \\'Ember\\' is not defined. (no-undef)\\n8:9 - Do not use global `$` or `jQuery` (ember/no-global-jquery)');\n  });\n  QUnit.test('routes/stories.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/stories.js should pass ESLint\\n\\n4:8 - Use import { run } from \\'@ember/runloop\\'; instead of using Ember destructuring (ember/new-module-imports)\\n4:13 - Use import $ from \\'jquery\\'; instead of using Ember destructuring (ember/new-module-imports)\\n26:21 - Unexpected console statement. (no-console)');\n  });\n});","define(\"insta-story-ui/tests/lint/templates.template.lint-test\", [], function () {\n  \"use strict\";\n\n  QUnit.module('TemplateLint');\n  QUnit.test('insta-story-ui/templates/application.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'insta-story-ui/templates/application.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('insta-story-ui/templates/components/story-slide.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'insta-story-ui/templates/components/story-slide.hbs should pass TemplateLint.\\n\\ninsta-story-ui/templates/components/story-slide.hbs\\n  2:4  error  Incorrect indentation for `<nav>` beginning at L2:C4. Expected `<nav>` to be at an indentation of 2 but was found at 4.  block-indentation\\n  3:8  error  Incorrect indentation for `<a>` beginning at L3:C8. Expected `<a>` to be at an indentation of 6 but was found at 8.  block-indentation\\n  4:8  error  Incorrect indentation for `<label>` beginning at L4:C8. Expected `<label>` to be at an indentation of 6 but was found at 8.  block-indentation\\n  5:12  error  Incorrect indentation for `{{input}}` beginning at L5:C12. Expected `{{input}}` to be at an indentation of 10 but was found at 12.  block-indentation\\n  6:12  error  Incorrect indentation for `<span>` beginning at L6:C12. Expected `<span>` to be at an indentation of 10 but was found at 12.  block-indentation\\n  12:4  error  Incorrect indentation for `<div>` beginning at L12:C4. Expected `<div>` to be at an indentation of 2 but was found at 4.  block-indentation\\n  13:8  error  Incorrect indentation for `<div>` beginning at L13:C8. Expected `<div>` to be at an indentation of 6 but was found at 8.  block-indentation\\n  14:8  error  Incorrect indentation for `<div>` beginning at L14:C8. Expected `<div>` to be at an indentation of 10 but was found at 8.  block-indentation\\n  22:8  error  Incorrect indentation for `<a>` beginning at L22:C8. Expected `<a>` to be at an indentation of 10 but was found at 8.  block-indentation\\n  26:8  error  Incorrect indentation for `<a>` beginning at L26:C8. Expected `<a>` to be at an indentation of 10 but was found at 8.  block-indentation\\n  15:12  error  Incorrect indentation for `{{#each-in}}` beginning at L15:C12. Expected `{{#each-in}}` to be at an indentation of 10 but was found at 12.  block-indentation\\n  16:16  error  Incorrect indentation for `<div>` beginning at L16:C16. Expected `<div>` to be at an indentation of 14 but was found at 16.  block-indentation\\n  17:20  error  Incorrect indentation for `<video>` beginning at L17:C20. Expected `<video>` to be at an indentation of 18 but was found at 20.  block-indentation\\n  23:12  error  Incorrect indentation for `<span>` beginning at L23:C12. Expected `<span>` to be at an indentation of 10 but was found at 12.  block-indentation\\n  24:12  error  Incorrect indentation for `<span>` beginning at L24:C12. Expected `<span>` to be at an indentation of 10 but was found at 12.  block-indentation\\n  27:12  error  Incorrect indentation for `<span>` beginning at L27:C12. Expected `<span>` to be at an indentation of 10 but was found at 12.  block-indentation\\n  28:12  error  Incorrect indentation for `<span>` beginning at L28:C12. Expected `<span>` to be at an indentation of 10 but was found at 12.  block-indentation\\n  17:156  error  Interaction added to non-interactive element  no-invalid-interactive\\n  16:42  error  you must use double quotes in templates  quotes\\n');\n  });\n  QUnit.test('insta-story-ui/templates/not-found.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'insta-story-ui/templates/not-found.hbs should pass TemplateLint.\\n\\ninsta-story-ui/templates/not-found.hbs\\n  2:4  error  Incorrect indentation for `<div>` beginning at L2:C4. Expected `<div>` to be at an indentation of 2 but was found at 4.  block-indentation\\n  3:8  error  Incorrect indentation for `<h1>` beginning at L3:C8. Expected `<h1>` to be at an indentation of 6 but was found at 8.  block-indentation\\n');\n  });\n  QUnit.test('insta-story-ui/templates/stories.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'insta-story-ui/templates/stories.hbs should pass TemplateLint.\\n\\ninsta-story-ui/templates/stories.hbs\\n  3:4  error  Incorrect indentation for `{{story-slide}}` beginning at L3:C4. Expected `{{story-slide}}` to be at an indentation of 2 but was found at 4.  block-indentation\\n');\n  });\n});","define(\"insta-story-ui/tests/lint/tests.lint-test\", [], function () {\n  \"use strict\";\n\n  QUnit.module('ESLint | tests');\n  QUnit.test('integration/components/story-slide-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/story-slide-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('test-helper.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/routes/not-found-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/not-found-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/routes/stories-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/stories-test.js should pass ESLint\\n\\n');\n  });\n});","define(\"insta-story-ui/tests/test-helper\", [\"insta-story-ui/app\", \"insta-story-ui/config/environment\", \"@ember/test-helpers\", \"ember-qunit\"], function (_app, _environment, _testHelpers, _emberQunit) {\n  \"use strict\";\n\n  (0, _testHelpers.setApplication)(_app.default.create(_environment.default.APP));\n  (0, _emberQunit.start)();\n});","define(\"insta-story-ui/tests/unit/routes/not-found-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | not-found', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:not-found');\n      assert.ok(route);\n    });\n  });\n});","define(\"insta-story-ui/tests/unit/routes/stories-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | stories', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:stories');\n      assert.ok(route);\n    });\n  });\n});","define('insta-story-ui/config/environment', [], function() {\n  var prefix = 'insta-story-ui';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","require('insta-story-ui/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;","file":"tests.js"}